#!/usr/bin/env bash

source "utils.sh"

partial=${1}

if [[ "${partial}" == "" ]]; then
    writeln "No search string provided"

    exit 1
fi

all_branches=$(git branch -a | grep "${partial}" | cut -c3-)

# Remove the "remotes/origin/" prefix if it's there
found_branches=()
for branch in ${all_branches}; do
    if [[ "${branch}" == remotes\/origin\/* ]]; then
        found_branches+=("${branch:15}")
    else
        found_branches+=("${branch}")
    fi
done

# Remote duplicates
found_branches=($(printf "%s\n" "${found_branches[@]}" | sort -u))

# We need the count in a couple of places, so put it in a var
found_branches_cnt=${#found_branches[@]}

IFS=$'\n'
i=1
arr=()

if [[ "${found_branches_cnt}" == 1 ]]; then
    writeln "<green>1</green> match found:"
else
    writeln "<green>${found_branches_cnt}</green> matches found:"
fi

echo ""

for branch in "${found_branches[@]}"; do
    writeln "${i}. ${branch//${partial}/<yellow>${partial}</yellow>}"

    ((i = i + 1))

    arr+=("${branch}")
done

write "\nWhich branch would you like to checkout? "
read -r choice

new_branch=$(echo "${arr[$choice-1]}")

if [[ "${new_branch}" == "" ]]; then
    writeln "Invalid selection. Choose between 1 and ${found_branches_cnt} only"

    exit 2
fi

git new "${new_branch}"
