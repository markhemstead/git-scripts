#!/usr/bin/env bash

source "utils.sh"
IFS=$'\n'

partials=("$@")

all_branches=$(git branch -a | grep -v "remotes/origin/HEAD" | grep -i "${partials[0]}" | cut -c3-)
for ((i = 1; i < ${#partials[@]}; i++)); do
    all_branches=$(printf "%s\n" "${all_branches[@]}" | grep -i "${partials[$i]}")
done

if [[ "${all_branches}" == "" ]]; then
    writeln "No branches found matching your parameters"

    exit 0
fi

# Remove the "remotes/origin/" prefix if it's there
found_branches=()
for branch in ${all_branches}; do
    if [[ "${branch}" == remotes/origin/* ]]; then
        found_branches+=("${branch:15}")
    else
        found_branches+=("${branch}")
    fi
done

# Remove duplicates
mapfile -t found_branches < <(printf "%s\n" "${found_branches[@]}" | sort -u)

# We need the count in a couple of places, so put it in a var
found_branches_cnt=${#found_branches[@]}

if [[ "${found_branches_cnt}" == 0 ]]; then
    writeln "No branches matching criteria found"
    exit 0
fi

writeln "<green>${found_branches_cnt}</green> match(es) found:"

echo ""

i=1
arr=()
for branch in "${found_branches[@]}"; do
    str=${branch}
    for partial in "${partials[@]}"; do
        str="${str//${partial}/<magenta>${partial}</magenta>}"
    done

    writeln "${i}. ${str}"

    ((i = i + 1))

    arr+=("${branch}")
done

write "\nWhich branch would you like to checkout? "
read -r choice

if ! [[ "${choice}" =~ [0-9] ]]; then
    if [[ "${found_branches_cnt}" == "1" ]]; then
        writeln "Invalid selection."
    else
        writeln "Invalid selection. Choose between 1 and ${found_branches_cnt} only"
    fi
    exit 2
fi

new_branch="${arr[$choice - 1]}"

if [[ "${new_branch}" == "" ]]; then
    if [[ "${found_branches_cnt}" == "1" ]]; then
            writeln "Invalid selection."
        else
            writeln "Invalid selection. Choose between 1 and ${found_branches_cnt} only"
        fi
    exit 2
fi

git new "${new_branch}"
